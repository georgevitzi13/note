import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import org.json.JSONArray;
import org.json.JSONObject;

// Κύριο Παράθυρο Παιχνιδιού
public class GameFrame extends JFrame {
    private CardLayout cardLayout;
    private JPanel mainPanel;
    
    public GameFrame() {
        setTitle("Παιχνίδι Γνώσεων");
        setSize(600, 400);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        
        cardLayout = new CardLayout();
        mainPanel = new JPanel(cardLayout);
        
        StartPanel startPanel = new StartPanel(this);
        QuestionPanel questionPanel = new QuestionPanel(this);
        
        mainPanel.add(startPanel, "Start");
        mainPanel.add(questionPanel, "Question");
        
        add(mainPanel);
        
        setVisible(true);
    }
    
    public void showPanel(String name) {
        cardLayout.show(mainPanel, name);
    }
    
    public static void main(String[] args) {
        SwingUtilities.invokeLater(GameFrame::new);
    }
}

// Οθόνη Έναρξης
class StartPanel extends JPanel {
    public StartPanel(GameFrame frame) {
        setLayout(new BorderLayout());
        JLabel titleLabel = new JLabel("Καλώς ήρθατε στο Παιχνίδι Γνώσεων!", JLabel.CENTER);
        JButton startButton = new JButton("Έναρξη Παιχνιδιού");
        
        startButton.addActionListener(e -> frame.showPanel("Question"));
        
        add(titleLabel, BorderLayout.CENTER);
        add(startButton, BorderLayout.SOUTH);
    }
}

// Οθόνη Ερωτήσεων
class QuestionPanel extends JPanel {
    private JLabel questionLabel;
    private JButton trueButton, falseButton;
    
    public QuestionPanel(GameFrame frame) {
        setLayout(new BorderLayout());
        questionLabel = new JLabel("Φόρτωση ερώτησης...");
        trueButton = new JButton("Σωστό");
        falseButton = new JButton("Λάθος");
        
        JPanel buttonPanel = new JPanel();
        buttonPanel.add(trueButton);
        buttonPanel.add(falseButton);
        
        add(questionLabel, BorderLayout.CENTER);
        add(buttonPanel, BorderLayout.SOUTH);
        
        loadQuestion();
    }
    
    private void loadQuestion() {
        try {
            String response = TriviaAPI.fetchQuestion();
            JSONObject json = new JSONObject(response);
            JSONArray results = json.getJSONArray("results");
            if (results.length() > 0) {
                JSONObject questionObj = results.getJSONObject(0);
                String questionText = questionObj.getString("question");
                questionLabel.setText(questionText);
            }
        } catch (Exception e) {
            questionLabel.setText("Αποτυχία φόρτωσης ερώτησης");
        }
    }
}

// Κλάση για ανάκτηση ερωτήσεων από το Trivia API
class TriviaAPI {
    public static String fetchQuestion() throws Exception {
        URL url = new URL("https://opentdb.com/api.php?amount=1&type=boolean");
        HttpURLConnection conn = (HttpURLConnection) url.openConnection();
        conn.setRequestMethod("GET");
        
        BufferedReader in = new BufferedReader(new InputStreamReader(conn.getInputStream()));
        String inputLine;
        StringBuilder content = new StringBuilder();
        while ((inputLine = in.readLine()) != null) {
            content.append(inputLine);
        }
        in.close();
        conn.disconnect();
        
        return content.toString();
    }
}
