import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.*;

class Question {
    private String questionText;
    private List<String> options;
    private int correctAnswerIndex;

    public Question(String questionText, List<String> options, int correctAnswerIndex) {
        this.questionText = questionText;
        this.options = options;
        this.correctAnswerIndex = correctAnswerIndex;
    }

    public String getQuestionText() {
        return questionText;
    }

    public List<String> getOptions() {
        return options;
    }

    public int getCorrectAnswerIndex() {
        return correctAnswerIndex;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append(questionText).append("\n");
        for (int i = 0; i < options.size(); i++) {
            sb.append((i + 1)).append(". ").append(options.get(i)).append("\n");
        }
        return sb.toString();
    }
}

class QuizGame {
    private List<Question> questions;
    private int score;
    private int maxScore;

    public QuizGame() {
        this.questions = new ArrayList<>();
        this.score = 0;
        this.maxScore = 0;
    }

    // Μέθοδος για να τραβήξουμε τις ερωτήσεις από την Trivia API με τις παραμέτρους του χρήστη
    public void fetchQuestionsFromTriviaAPI(String category, String type, String difficulty, int questionCount) {
        try {
            String urlString = String.format("https://opentdb.com/api.php?amount=%d&category=%s&type=%s&difficulty=%s", 
                questionCount, category, type, difficulty);
            URL url = new URL(urlString);
            HttpURLConnection connection = (HttpURLConnection) url.openConnection();
            connection.setRequestMethod("GET");

            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            String inputLine;
            StringBuffer response = new StringBuffer();

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();

            // Ανάλυση του JSON απαντητικού
            JSONObject jsonResponse = new JSONObject(response.toString());
            JSONArray results = jsonResponse.getJSONArray("results");

            for (int i = 0; i < results.length(); i++) {
                JSONObject questionJSON = results.getJSONObject(i);
                String questionText = questionJSON.getString("question");
                JSONArray incorrectAnswers = questionJSON.getJSONArray("incorrect_answers");
                String correctAnswer = questionJSON.getString("correct_answer");

                List<String> options = new ArrayList<>();
                options.add(correctAnswer);
                for (int j = 0; j < incorrectAnswers.length(); j++) {
                    options.add(incorrectAnswers.getString(j));
                }

                // Ανακατεύουμε τις επιλογές για να είναι τυχαία
                java.util.Collections.shuffle(options);

                int correctAnswerIndex = options.indexOf(correctAnswer);
                questions.add(new Question(questionText, options, correctAnswerIndex));
            }

        } catch (Exception e) {
            System.out.println("Σφάλμα κατά την ανάκτηση των ερωτήσεων: " + e.getMessage());
        }
    }

    public void displayQuestions() {
        if (questions.isEmpty()) {
            System.out.println("Δεν υπάρχουν ερωτήσεις για εμφάνιση.\n");
            return;
        }

        System.out.println("Λίστα Ερωτήσεων:");
        for (int i = 0; i < questions.size(); i++) {
            System.out.println("Ερώτηση " + (i + 1) + ":");
            System.out.println(questions.get(i));
        }
        System.out.println();
    }

    public void startQuiz(Scanner scanner) {
        score = 0;
        if (questions.isEmpty()) {
            System.out.println("Δεν υπάρχουν ερωτήσεις για το τεστ.\n");
            return;
        }

        for (int i = 0; i < questions.size(); i++) {
            Question q = questions.get(i);
            System.out.println("Ερώτηση " + (i + 1) + ":");
            System.out.println(q);

            int answer = -1;
            while (answer < 1 || answer > 4) {
                System.out.print("Επιλέξτε την απάντησή σας (1-4): ");
                if (scanner.hasNextInt()) {
                    answer = scanner.nextInt();
                    if (answer < 1 || answer > 4) {
                        System.out.println("Μη έγκυρη επιλογή. Παρακαλώ επιλέξτε έναν αριθμό μεταξύ 1 και 4.");
                    }
                } else {
                    System.out.println("Παρακαλώ εισάγετε έναν έγκυρο αριθμό.");
                    scanner.next(); // Clear invalid input
                }
            }

            if (answer - 1 == q.getCorrectAnswerIndex()) {
                System.out.println("Σωστά!\n");
                score += 10; // Αύξηση του σκορ με 10 για σωστή απάντηση
            } else {
                System.out.println("Λάθος! Η σωστή απάντηση ήταν: " + (q.getCorrectAnswerIndex() + 1) + "\n");
                score -= 5; // Μείωση του σκορ με 5 για λάθος απάντηση
            }
        }

        System.out.println("Τέλος του τεστ! Η τελική σας βαθμολογία είναι: " + score + "/" + questions.size() * 10);
        
        // Αν είναι το νέο σκορ μεγαλύτερο από το μέγιστο σκορ, το ενημερώνουμε
        if (score > maxScore) {
            maxScore = score;
            System.out.println("Συγχαρητήρια! Επίτευξες νέο υψηλότερο σκορ: " + maxScore);
        }

        System.out.println("Το υψηλότερο σκορ σας είναι: " + maxScore + "\n");
    }

    // Μέθοδος για να αρχικοποιήσει το παιχνίδι με παραμέτρους
    public void initializeGame(Scanner scanner) {
        System.out.println("Επιλογές παραμέτρων παιχνιδιού:");
        System.out.print("Εισάγετε την κατηγορία (π.χ. 9 για General Knowledge): ");
        String category = scanner.nextLine();

        System.out.print("Επιλέξτε τον τύπο (multiple ή boolean): ");
        String type = scanner.nextLine();

        System.out.print("Επιλέξτε την δυσκολία (easy, medium, hard): ");
        String difficulty = scanner.nextLine();

        System.out.print("Πόσες ερωτήσεις θέλεις; ");
        int questionCount = scanner.nextInt();
        scanner.nextLine(); // Clear buffer

        // Ανακτούμε τις ερωτήσεις από το Trivia API
        fetchQuestionsFromTriviaAPI(category, type, difficulty, questionCount);
    }

    public int getMaxScore() {
        return maxScore;
    }
}

public class QuizGameApp {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        QuizGame quizGame = new QuizGame();

        System.out.println("Καλώς ήρθατε στο Παιχνίδι Ερωτήσεων!");

        while (true) {
            try {
                System.out.println("1. Νέο παιχνίδι");
                System.out.println("2. Προβολή Ερωτήσεων");
                System.out.println("3. Έναρξη Τεστ");
                System.out.println("4. Έξοδος");
                System.out.print("Επιλέξτε μία επιλογή: ");
                
                int choice = scanner.nextInt();
                scanner.nextLine(); // Καθαρισμός νέας γραμμής
                
                if (choice == 1) {
                    quizGame.initializeGame(scanner);
                } else if (choice == 2) {
                    quizGame.displayQuestions();
                } else if (choice == 3) {
                    quizGame.startQuiz(scanner);
                } else if (choice == 4) {
                    System.out.println("Εξοδος από το παιχνίδι. Αντίο!");
                    break;
                } else {
                    System.out.println("Μη έγκυρη επιλογή, παρακαλώ προσπαθήστε ξανά.");
                }
            } catch (Exception e) {
                System.out.println("Σφάλμα: " + e.getMessage());
                scanner.nextLine(); // Clear the buffer in case of invalid input
            }
        }

        scanner.close();
    }
}
